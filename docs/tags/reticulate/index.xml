<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reticulate on A Blag</title>
    <link>/blag/tags/reticulate/</link>
    <description>Recent content in reticulate on A Blag</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Mar 2020 15:00:00 -0500</lastBuildDate>
    
	<atom:link href="/blag/tags/reticulate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Monte Carlo Method for Approximating Pi</title>
      <link>/blag/2020/03/14/monte-carlo-method-for-approximating-pi/</link>
      <pubDate>Sat, 14 Mar 2020 15:00:00 -0500</pubDate>
      
      <guid>/blag/2020/03/14/monte-carlo-method-for-approximating-pi/</guid>
      <description>In honor of Pi Day, I am going to walk through a common approach for approximating this important transcendental number. This is a popular programming exercise that shows how we can use random data to estimate \(\pi\). I find this interesting because it allows us to use basic principles of geometry to approximate an irrational number.
Please note that there are better ways to compute \(\pi\). However, itâ€™s my view that this is the most intuitive way to do it.</description>
    </item>
    
  </channel>
</rss>